
(function() {
    function h(a, b) {
        return window.addEventListener ? (window.addEventListener(a, b, !1), !0) : window.attachEvent ? window.attachEvent("on" + a, b) : !1
    }

    function u(a) {
        var b = new Date;
        b.setTime(b.getTime() - 1);
        var c;
        c = k.cookie;
        var g = a + "=",
            d = c.indexOf(g),
            e = !1; - 1 != d && (e = !0, 0 != d && " " != c.charAt(d - 1) && (e = !1, d = c.indexOf(" " + g, d) + 1, 0 != d && (e = !0)));
        e ? (c = d + g.length, g = k.cookie, d = g.indexOf(";", c), -1 == d && (d = g.length), c = g.substring(c, d)) : c = null;
        c = null == c ? null : unescape(c);
        k.cookie = a + "=" + c + "; expires=" + b.toGMTString()
    }

    function x() {
        if (-1 !=
            k.cookie.indexOf("ps_scookie=cookieId")) return u("ps_scookie"), !0;
        k.cookie = "ps_scookie=cookieId";
        return -1 != k.cookie.indexOf("ps_scookie=cookieId") ? (u("ps_scookie"), !0) : !1
    }

    function r(a) {
        window.console && console.log("CopperEgg RUM script encountered an error! [" + a.name + "] [" + a.message + "]")
    }

    function t(a) {
        var b = a.url,
            c = b,
            g = "/",
            d = "",
            e = b.indexOf("://");
        if (!(0 > e)) {
            var n = b.substr(e + 3).indexOf("/");
            0 > n || (n += 3 + e, c = b.substr(0, n), e = b.indexOf("?"), e > n ? (g = b.substring(n, e).split("#")[0], d = b.substr(e, 50)) : g = b.substr(n).split("#")[0])
        }
        var b =
            BACON.beaconUrl,
            n = y,
            e = BACON.id,
            z = encodeURIComponent(p.getBrowser() + p.getPlatform()),
            c = encodeURIComponent(c),
            g = encodeURIComponent(g),
            d = encodeURIComponent(d),
            A = encodeURIComponent(a.pageTitle),
            B = "AJAX" == a.type ? "T" : "F",
            k = a.reqSendTime - a.tranStartTime,
            m = a.firstByteTime - a.reqSendTime,
            f = a.lastByteTime - a.firstByteTime,
            h = a.endOfRenderTime - a.lastByteTime,
            q;
        q = a.endOfRenderTime - a.tranStartTime;
        var r = p.isMobile;
        q = q <= 1E3 * (r ? BACON.apdexMobileSatisfiedSeconds || 6 : BACON.apdexSatisfiedSeconds || 4) ? "1.0" : q <= 1E3 * (r ? BACON.apdexMobileFrustratedSeconds ||
            24 : BACON.apdexFrustratedSeconds || 16) ? "0.5" : "0.0";
        b = [b, "?v=", n, "&id=", e, "&ua=", z, "&d=", c, "&u=", g, "&p=", d, "&t=", A, "&j=", B, "&s=", k, "&f=", m, "&x=", f, "&r=", h, "&ap=", q, "&ab=", a.abandon];
        (0 > a.reqSendTime - a.tranStartTime || 0 > a.firstByteTime - a.reqSendTime || 0 > a.lastByteTime - a.firstByteTime || 0 > a.endOfRenderTime - a.lastByteTime || 6E5 < a.endOfRenderTime - a.tranStartTime) && b.push("&bf=" + ("wpt:" + (window.performance && window.performance.timing ? "T" : "F") + ",wls:" + (window.localStorage && window.localStorage.setItem ? "T" : "F") +
            ",oph:" + ("onpagehide" in window ? "T" : "F") + ",odcl:" + (0 == l ? "F" : "T") + ",ua:" + encodeURIComponent(window.navigator.userAgent)));
        (new Image).src = b.join("")
    }

    function v() {
        try {
            if (!(0 < m)) {
                m = (new Date).getTime();
                var a = {
                    type: "Page",
                    abandon: "F",
                    url: window.location.href,
                    pageTitle: document.title
                };
                if (window.performance && window.performance.timing) a.tranStartTime = 0 < window.performance.timing.navigationStart ? window.performance.timing.navigationStart : window.performance.timing.requestStart, a.reqSendTime = window.performance.timing.requestStart,
                    a.firstByteTime = window.performance.timing.responseStart, a.lastByteTime = window.performance.timing.domContentLoadedEventStart, a.endOfRenderTime = 0 < window.performance.timing.loadEventEnd ? window.performance.timing.loadEventEnd : window.performance.timing.loadEventStart;
                else {
                    a.tranStartTime = parseInt(window.localStorage.getItem("bcnNavigationStart"), 10);
                    if (isNaN(a.tranStartTime) || 0 == a.tranStartTime) a.tranStartTime = BACON.starttime;
                    a.reqSendTime = a.tranStartTime;
                    a.firstByteTime = BACON.starttime;
                    a.lastByteTime =
                        0 == l ? BACON.starttime : l;
                    a.endOfRenderTime = m
                }
                t(a)
            }
        } catch (b) {
            r(b)
        }
    }

    function C() {
        l = (new Date).getTime()
    }

    function w() {
        try {
            s = (new Date).getTime();
            if (0 == m) {
                m = (new Date).getTime();
                var a = {
                    endOfRenderTime: s,
                    type: "Page",
                    abandon: "T",
                    url: window.location.href,
                    pageTitle: document.title ? document.title + " (Abandoned)" : "Abandoned"
                };
                if (window.performance && window.performance.timing) a.tranStartTime = 0 < window.performance.timing.navigationStart ? window.performance.timing.navigationStart : window.performance.timing.requestStart,
                    a.reqSendTime = window.performance.timing.requestStart, a.firstByteTime = window.performance.timing.responseStart, a.lastByteTime = 0 == window.performance.timing.domContentLoadedEventStart ? s : window.performance.timing.domContentLoadedEventStart;
                else {
                    a.tranStartTime = window.localStorage.getItem("bcnNavigationStart");
                    if (null === a.tranStartTime || 0 == a.tranStartTime) a.tranStartTime = BACON.starttime;
                    a.reqSendTime = a.tranStartTime;
                    a.firstByteTime = BACON.starttime;
                    a.lastByteTime = 0 == l ? BACON.starttime : l
                }
                a.endOfRenderTime <
                    a.lastByteTime && (a.endOfRenderTime = a.lastByteTime);
                t(a)
            }
            window.localStorage.setItem("bcnNavigationStart", s.toString())
        } catch (b) {
            r(b)
        }
    }

    function D() {
        function a() {
            this._object = window.XMLHttpRequest.isNormalizedObject ? new e : new window.XMLHttpRequest
        }

        function b() {
            return new a
        }

        function c(a) {
            if (a.onreadystatechange) {
                var b = {
                    type: "readystatechange",
                    target: this,
                    currentTarget: this,
                    eventPhase: 2,
                    bubbles: !1,
                    cancelable: !1,
                    timeStamp: (new Date).getTime(),
                    stopPropagation: function() {},
                    preventDefault: function() {},
                    initEvent: function() {}
                };
                (a.onreadystatechange.handleEvent || a.onreadystatechange).apply(a, [b])
            }
        }

        function g(a) {
            a._object.onreadystatechange = new window.Function
        }
        try {
            Object.defineProperty({}, "x", {})
        } catch (d) {
            return
        }
        var e = window.XMLHttpRequest;
        b.prototype = a.prototype;
        p.isGecko && e.hasOwnProperty("wrapped") && (b.wrapped = e.wrapped);
        b.isNormalizedObject = !0;
        b.UNSENT = 0;
        b.OPENED = 1;
        b.HEADERS_RECEIVED = 2;
        b.LOADING = 3;
        b.DONE = 4;
        b.prototype.UNSENT = b.UNSENT;
        b.prototype.OPENED = b.OPENED;
        b.prototype.HEADERS_RECEIVED = b.HEADERS_RECEIVED;
        b.prototype.LOADING =
            b.LOADING;
        b.prototype.DONE = b.DONE;
        b.prototype.readyState = b.UNSENT;
        b.prototype.responseText = "";
        b.prototype.responseXML = null;
        b.prototype.status = 0;
        b.prototype.statusText = "";
        b.prototype.priority = "NORMAL";
        b.prototype.onreadystatechange = null;
        b.bcnAjaxInit = function(a) {
            this.bcnStartTime = this.bcnSendEndTime = this.bcnFirstByteTime = this.bcnLastByteTime = this.bcnRenderTime = -1;
            this.bcnUrl = a
        };
        b.bcnAjaxOnStart = function() {
            this.bcnStartTime = (new Date).getTime()
        };
        b.bcnAjaxOnFirstByte = function() {
            -1 < this.bcnFirstByteTime ||
                this.readyState <= b.OPENED || (this.bcnFirstByteTime = (new Date).getTime())
        };
        b.bcnAjaxOnLastByte = function() {
            this.bcnLastByteTime = (new Date).getTime()
        };
        b.bcnAjaxOnRender = function() {
            this.bcnRenderTime = (new Date).getTime();
            var a = this.bcnStartTime,
                b = this.bcnRenderTime,
                c;
            c = this.bcnUrl;
            if (void 0 !== c) {
                var e = document.createElement("div");
                e.innerHTML = '<a href="' + c.split("&").join("&amp;").split("<").join("&lt;").split('"').join("&quot;") + '">x</a>';
                c = e.firstChild.href
            }
            a = {
                tranStartTime: a,
                endOfRenderTime: b,
                abandon: "F",
                type: "AJAX",
                url: c,
                pageTitle: this.bcnRequestHeaderValue || document.title
            };
            a.reqSendTime = 0 < this.bcnSendEndTime ? this.bcnSendEndTime : a.tranStartTime;
            a.firstByteTime = 0 < this.bcnFirstByteTime ? this.bcnFirstByteTime : a.reqSendTime;
            a.lastByteTime = 0 < this.bcnLastByteTime ? this.bcnLastByteTime : a.firstByteTime;
            0 < m && t(a)
        };
        b.prototype.open = function(a, e, d, k, m) {
            b.bcnAjaxInit.call(this, e);
            var h = a.toLowerCase();
            if ("connect" == h || "trace" == h || "track" == h) throw Error(18);
            delete this._headers;
            3 > arguments.length && (d = !0);
            this._async =
                d;
            var f = this,
                l = this.readyState,
                q = null;
            p.isIE && d && (q = function() {
                l != b.DONE && (g(f), f.abort())
            }, window.attachEvent("onunload", q));
            4 < arguments.length ? this._object.open(a, e, d, k, m) : 3 < arguments.length ? this._object.open(a, e, d, k) : this._object.open(a, e, d);
            this.readyState = b.OPENED;
            c(this);
            this._object.onreadystatechange = function() {
                try {
                    if (!p.isGecko || d) f.readyState = f._object.readyState, f._aborted ? f.readyState = b.UNSENT : (b.bcnAjaxOnFirstByte.call(f), f.readyState == b.DONE && (b.bcnAjaxOnLastByte.call(f), delete f._data,
                        g(f), p.isIE && d && window.detachEvent("onunload", q), l != f.readyState && c(f), l = f.readyState, f.onload && f.onload.apply(this, arguments), b.bcnAjaxOnRender.call(f)))
                } catch (a) {
                    r(a)
                }
            }
        };
        b.prototype.send = function(a) {
            arguments.length || (a = null);
            a && a.nodeType && (a = window.XMLSerializer ? (new window.XMLSerializer).serializeToString(a) : a.xml, this._headers["Content-Type"] || this._object.setRequestHeader("Content-Type", "application/xml"));
            this._data = a;
            b.bcnAjaxOnStart.call(this);
            a: if (this._object.send(this._data), p.isGecko &&
                !this._async)
                for (this.readyState = b.OPENED; this.readyState < b.DONE;)
                    if (this.readyState++, c(this), this._aborted) break a;
            this.bcnSendEndTime = (new Date).getTime()
        };
        b.prototype.abort = function() {
            this.readyState > b.UNSENT && (this._aborted = !0);
            this._object.abort();
            g(this);
            this.readyState = b.UNSENT;
            delete this._data
        };
        b.prototype.getAllResponseHeaders = function() {
            return this._object.getAllResponseHeaders()
        };
        b.prototype.getResponseHeader = function(a) {
            return this._object.getResponseHeader(a)
        };
        b.prototype.setRequestHeader =
            function(a, b) {
                this._headers || (this._headers = {});
                this._headers[a] = b;
                BACON.ajaxRequestHeaderToMonitor && a == BACON.ajaxRequestHeaderToMonitor && (this.bcnRequestHeaderValue = b);
                return this._object.setRequestHeader(a, b)
            };
        b.prototype.addEventListener = function(a, b, c) {
            this._object.addEventListener(a, b, c)
        };
        b.prototype.removeEventListener = function(a, b, c) {
            this._object.removeEventListener(a, b, c)
        };
        Object.defineProperty(b.prototype, "timeout", {
            get: function() {
                return this._object.timeout
            },
            set: function(a) {
                this._object.timeout =
                    a
            }
        });
        Object.defineProperty(b.prototype, "withCredentials", {
            get: function() {
                return this._object.withCredentials
            },
            set: function(a) {
                this._object.withCredentials = a
            }
        });
        Object.defineProperty(b.prototype, "upload", {
            get: function() {
                return this._object.upload
            }
        });
        Object.defineProperty(b.prototype, "responseType", {
            get: function() {
                return this._object.responseType
            },
            set: function(a) {
                this._object.responseType = a
            }
        });
        Object.defineProperty(b.prototype, "responseText", {
            get: function() {
                return this._object.responseText
            }
        });
        Object.defineProperty(b.prototype,
            "responseXML", {
                get: function() {
                    return this._object.responseXML
                }
            });
        Object.defineProperty(b.prototype, "status", {
            get: function() {
                return this._object.status
            }
        });
        Object.defineProperty(b.prototype, "statusText", {
            get: function() {
                return this._object.statusText
            }
        });
        b.prototype.toString = function() {
            return "[object XMLHttpRequest]"
        };
        b.toString = function() {
            return "[XMLHttpRequest]"
        };
        window.XMLHttpRequest = b
    }
    if (!window.bcnScript) {
        window.bcnScript = "y";
        BACON.beaconUrl = BACON.beaconUrl || "//bacon.copperegg.com/bacon.gif";
        var y =
            "200",
            k = document,
            s = 0,
            m = 0,
            l = 0,
            p = {
                browser: null,
                version: null,
                isMobile: !1,
                init: function() {
                    var a = window.navigator.userAgent;
                    if (/Chrome/.test(a)) this.browser = "Chrome", this.version = /Chrome\/[\d\.]+/.exec(a)[0].split("/")[1];
                    else if (/Opera/.test(a)) {
                        if (this.browser = "Opera", this.version = /Opera\/[\.\d]+/.exec(a)[0].split("/")[1], /Mini/.test(a) || /Mobi/.test(a)) this.isMobile = !0
                    } else if (/MSIE/.test(a)) this.browser = "Internet Explorer", this.version = /MSIE \d+[.]\d+/.exec(a)[0].split(" ")[1], /IEMobile/.test(a) && (this.isMobile = !0);
                    else if (/Trident/.test(a)) this.browser = "Internet Explorer", this.version = / rv:\d+[.]\d+/.exec(a)[0].split(":")[1];
                    else if (/Firefox/.test(a)) this.browser = "Firefox", /Fennec/.test(a) && (this.isMobile = !0), this.version = /Firefox\/[\.\d]+/.exec(a)[0].split("/")[1];
                    else if (/Android/.test(a)) this.browser = "Android Webkit", this.isMobile = !0;
                    else if (/Safari/.test(a)) {
                        if (this.browser = "Safari", /iPhone/.test(a) || /iPad/.test(a) || /iPod/.test(a)) this.isMobile = !0
                    } else /Dolfin/.test(a) ? (this.browser = "Dolphin", this.version =
                        /Dolfin\/[\.\d]+/.exec(a)[0].split("/")[1], this.isMobile = !0) : /BrowserNG/.test(a) && (this.browser = "Nokia NG", this.version = /BrowserNG\/[\.\d]+/.exec(a)[0].split("/")[1], this.isMobile = !0);
                    if (/Mobile/.test(a) || /SymbOS/.test(a) || /SymbianOS/.test(a)) this.isMobile = !0
                },
                getBrowser: function() {
                    return this.browser ? this.version && "Internet Explorer" == this.browser ? this.browser + " " + this.version.split(".")[0] : this.browser : "Unknown browser"
                },
                getPlatform: function() {
                    return this.isMobile ? " Mobile" : ""
                },
                isGecko: !!window.controllers,
                isIE: !!window.document.namespaces
            };
        a: try {
            p.init();
            if (!window.performance || !window.performance.timing)
                if (window.localStorage && window.localStorage.setItem) h("DOMContentLoaded", C);
                else break a;
                "" != location.host && !1 != x() && ("onpagehide" in window ? (h("pageshow", v), h("pagehide", w)) : (h("load", v), h("beforeunload", w)), BACON.avoidAjaxMonitoring || D())
        } catch (E) {
            r(E)
        }
    }
})();